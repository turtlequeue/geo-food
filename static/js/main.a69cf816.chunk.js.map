{"version":3,"sources":["asset/image/1f32e.png","asset/image/1f32f.png","asset/image/1f355.png","asset/image/1f35f.png","asset/image/1f32e-64.png","asset/image/1f32f-64.png","asset/image/1f355-64.png","asset/image/1f35f-64.png","component/FoodIcon/index.tsx","component/SendBar/index.tsx","component/_hook/useGoogleApi.tsx","component/GMap/gmapStyles.ts","component/GMap/index.tsx","component/_page/MapPage/index.tsx","component/_page/WaitingPage/index.tsx","component/_hook/useSubscription.ts","component/_hook/useConstant.tsx","component/_hook/useLocation.ts","config.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","taco","fries","pizza","burrito","food_image_small","taco64","fries64","pizza64","burrito64","FoodIcon","food","props","Img","alt","src","styled","img","loadScriptPromise","SendBar","publish","Container","GroupButton","Object","keys","map","FoodButton","key","onClick","gmapStyles","elementType","stylers","color","visibility","featureType","useGoogleApi","apiKey","useState","loaded","setLoaded","k","setK","google","window","undefined","useEffect","Promise","resolve","reject","script","document","createElement","addEventListener","id","body","appendChild","loadScript","then","cancel","requestAnimationFrame","cancelAnimationFrame","GMap","events","center","googleApiKey","ref","useRef","marked","googleApi","useMemo","current","maps","Map","streetViewControl","fullscreenControl","disableDefaultUI","mapTypeControl","rotateControl","scaleControl","zoomControl","panControl","draggable","zoom","LatLng","lat","lon","mapTypeId","background","styles","setCenter","newEvents","filter","event","addMarker","style","width","height","wait","delay","setTimeout","a","location","url","marker","Marker","position","lng","icon","setOpacity","querySelectorAll","forEach","el","parentElement","animate","offset","opacity","transform","duration","setMap","MapPage","MapWrapper","div","WaitingPage","Center","i","Ball","rotateAnim","Array","from","_","arr","frames","length","j","arr2","b","phy","Math","PI","s","abs","fl","x","round","cos","sin","join","keyframes","useSubscription","userToken","channel","setEvents","pushEvent","e","sort","date","findIndex","u","queue","fn","v","useConstant","turtlequeue","create","make","host","type","protocol","status","setStatus","onReady","onConnect","onDisconnect","on","unbind","connect","disconnect","onMessage","error","data","_meta","isEvent","options","subscribe","unsubscribe","generateRandomKey","Date","now","payload","err","_data","_metadata","random","toString","slice","defaultLocation","useLocation","setLocation","located","navigator","geolocation","getCurrentPosition","coords","timeout","latitude","longitude","config","process","gmaps","console","log","JSON","stringify","App","googleMapReady","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a69cf816.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1f32e.e7199aab.png\";","module.exports = __webpack_public_path__ + \"static/media/1f32f.8eeb3ae7.png\";","module.exports = __webpack_public_path__ + \"static/media/1f355.3be17955.png\";","module.exports = __webpack_public_path__ + \"static/media/1f35f.e342aa65.png\";","module.exports = __webpack_public_path__ + \"static/media/1f32e-64.b31f1c87.png\";","module.exports = __webpack_public_path__ + \"static/media/1f32f-64.56080a62.png\";","module.exports = __webpack_public_path__ + \"static/media/1f355-64.bfd42f29.png\";","module.exports = __webpack_public_path__ + \"static/media/1f35f-64.1832e238.png\";","import React, { ImgHTMLAttributes } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport pizza from \"../../asset/image/1f32e.png\";\r\nimport burrito from \"../../asset/image/1f32f.png\";\r\nimport fries from \"../../asset/image/1f355.png\";\r\nimport taco from \"../../asset/image/1f35f.png\";\r\nimport pizza64 from \"../../asset/image/1f32e-64.png\";\r\nimport burrito64 from \"../../asset/image/1f32f-64.png\";\r\nimport fries64 from \"../../asset/image/1f355-64.png\";\r\nimport taco64 from \"../../asset/image/1f35f-64.png\";\r\n\r\nexport const food_image = {\r\n  taco,\r\n  fries,\r\n  pizza,\r\n  burrito,\r\n};\r\n\r\nexport const food_image_small = {\r\n  taco: taco64,\r\n  fries: fries64,\r\n  pizza: pizza64,\r\n  burrito: burrito64,\r\n};\r\n\r\ninterface FoodIconInterface {\r\n  food: \"taco\" | \"fries\" | \"pizza\" | \"burrito\";\r\n}\r\n\r\nexport const FoodIcon = ({\r\n  food,\r\n  ...props\r\n}: FoodIconInterface & ImgHTMLAttributes<any>) => (\r\n  <Img {...props} alt={`${food} icon`} src={food_image_small[food]} />\r\n);\r\n\r\nconst Img = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: contain;\r\n  object-position: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled/macro\";\r\nimport { food_image_small, FoodIcon } from \"../FoodIcon\";\r\n\r\nexport const SendBar = ({ publish }) => (\r\n  <Container>\r\n    <GroupButton>\r\n      {Object.keys(food_image_small).map((food: any) => (\r\n        <FoodButton key={food} food={food} onClick={() => publish(food)} />\r\n      ))}\r\n    </GroupButton>\r\n  </Container>\r\n);\r\n\r\nconst FoodButton = styled(FoodIcon)`\r\n  cursor: pointer;\r\n  margin: 4px;\r\n\r\n  transition: transform 240ms ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.08, 1.08);\r\n  }\r\n  &:active {\r\n    transition: none;\r\n    transform: scale(0.94, 0.94);\r\n  }\r\n`;\r\n\r\nconst GroupButton = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: white;\r\n  position: fixed;\r\n  bottom: 16px;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n  padding: 4px;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst loadScript = (apiKey: string) =>\r\n  new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n\r\n    script.addEventListener(\"load\", resolve);\r\n\r\n    script.src = `https://maps.googleapis.com/maps/api/js?v=3.40&key=${apiKey}`;\r\n    script.id = \"google-map-script\";\r\n\r\n    document.body.appendChild(script);\r\n  });\r\n\r\nlet loadScriptPromise: Promise<void>;\r\n\r\nexport const useGoogleApi = (apiKey: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [k, setK] = useState(1);\r\n\r\n  const google =\r\n    typeof window !== \"undefined\" ? (window as any).google : undefined;\r\n\r\n  useEffect(() => {\r\n    (loadScriptPromise = loadScriptPromise || loadScript(apiKey)).then(() => {\r\n      setLoaded(true);\r\n    });\r\n  }, [apiKey]);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) return;\r\n\r\n    if (google) return;\r\n\r\n    const cancel = requestAnimationFrame(() => setK((k) => k + 1));\r\n\r\n    return () => cancelAnimationFrame(cancel);\r\n  }, [k, loaded]);\r\n\r\n  return google;\r\n};\r\n","export const gmapStyles = [\r\n  {\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#f5f5f5\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#616161\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#f5f5f5\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative.land_parcel\",\r\n    elementType: \"labels\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative.land_parcel\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#bdbdbd\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#eeeeee\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#757575\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#e5e5e5\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#9e9e9e\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#757575\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#dadada\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#616161\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#9e9e9e\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit.line\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#e5e5e5\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit.station\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#eeeeee\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#c9c9c9\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#9e9e9e\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { useRef, useMemo, useEffect } from \"react\";\r\nimport { gmapStyles } from \"./gmapStyles\";\r\nimport { food_image_small } from \"../FoodIcon\";\r\nimport { useGoogleApi } from \"../_hook/useGoogleApi\";\r\n\r\nexport const GMap = ({ events, center, googleApiKey }) => {\r\n  // ref to the map container\r\n  const ref = useRef(null as any);\r\n\r\n  // keep track of existing markers\r\n  const marked = useRef({});\r\n\r\n  // load google gmap api\r\n  const googleApi = useGoogleApi(googleApiKey);\r\n\r\n  // instanciate map\r\n  const map = useMemo(() => {\r\n    if (!ref.current) return;\r\n    if (!googleApi) return;\r\n\r\n    return new googleApi.maps.Map(ref.current, {\r\n      streetViewControl: false,\r\n      fullscreenControl: false,\r\n      disableDefaultUI: false,\r\n      mapTypeControl: false,\r\n      rotateControl: false,\r\n      scaleControl: false,\r\n      zoomControl: false,\r\n      panControl: false,\r\n      draggable: false,\r\n      zoom: 8,\r\n      center: new googleApi.maps.LatLng(center.lat, center.lon),\r\n      mapTypeId: \"roadmap\",\r\n      background: \"#ddd\",\r\n      styles: gmapStyles,\r\n    });\r\n  }, [ref.current, googleApi]);\r\n\r\n  // re-center\r\n  useEffect(() => {\r\n    if (!map) return;\r\n    if (!center) return;\r\n\r\n    map.setCenter(new googleApi.maps.LatLng(center.lat, center.lon));\r\n  }, [center, map]);\r\n\r\n  // add new markers\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const newEvents = events.filter(({ key }) => !marked.current[key]);\r\n\r\n    for (const event of newEvents) {\r\n      addMarker(googleApi, map, event);\r\n\r\n      marked.current = { ...marked.current, [event.key]: true };\r\n    }\r\n  }, [map, events]);\r\n\r\n  return <div ref={ref} style={{ width: \"100%\", height: \"100%\" }} />;\r\n};\r\n\r\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\r\n\r\nconst addMarker = async (\r\n  googleApi,\r\n  map,\r\n  { key, food, location: { lat, lon } }\r\n) => {\r\n  const url = food_image_small[food] + `#key=${key}`;\r\n\r\n  const marker = new googleApi.maps.Marker({\r\n    position: { lat: lat, lng: lon },\r\n    icon: url,\r\n    map,\r\n  });\r\n\r\n  marker.setOpacity(0);\r\n\r\n  await wait(200);\r\n\r\n  marker.setOpacity(1);\r\n\r\n  const elements = document.querySelectorAll(`[src=\"${url}\"]`);\r\n\r\n  elements.forEach((el) => {\r\n    if (!el.parentElement) return;\r\n\r\n    el.parentElement.animate(\r\n      [\r\n        {\r\n          offset: 0,\r\n          opacity: 0.6,\r\n          transform: \"translate3d(0,0,0) scale(0.2,0.2)\",\r\n        },\r\n        {\r\n          offset: 0.032,\r\n          opacity: 1,\r\n          transform: \"translate3d(0,-50px,0) scale(1.3,1.3)\",\r\n        },\r\n        {\r\n          offset: 0.06,\r\n          opacity: 1,\r\n          transform: \"translate3d(0,-10px,0) scale(0.7,0.7)\",\r\n        },\r\n        {\r\n          offset: 0.08,\r\n          opacity: 1,\r\n          transform: \"translate3d(0,-160px,0) scale(1,1)\",\r\n        },\r\n        {\r\n          offset: 0.1,\r\n          opacity: 0,\r\n          transform: \"translate3d(0,-200px,0) scale(0.6,0.6)\",\r\n        },\r\n        {\r\n          offset: 1,\r\n          opacity: 0,\r\n          transform: \"scale(0.6,0.6)\",\r\n        },\r\n      ],\r\n      { duration: 7400 }\r\n    );\r\n  });\r\n\r\n  await wait(2000);\r\n\r\n  marker.setMap(null);\r\n};\r\n","import React from \"react\";\r\nimport { SendBar } from \"../../SendBar\";\r\nimport { GMap } from \"../../GMap\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// @ts-ignore\r\nexport const MapPage = ({ events, location, googleApiKey, publish }) => (\r\n  <Container>\r\n    <MapWrapper>\r\n      <GMap center={location} events={events} googleApiKey={googleApiKey} />\r\n    </MapWrapper>\r\n\r\n    <SendBar publish={publish} />\r\n  </Container>\r\n);\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\nconst MapWrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { food_image_small, FoodIcon } from \"../../FoodIcon\";\r\nimport styled from \"@emotion/styled\";\r\nimport { keyframes } from \"@emotion/core\";\r\n\r\nexport const WaitingPage = () => (\r\n  <Container>\r\n    <Center>\r\n      {Object.keys(food_image_small).map((food: any, i) => (\r\n        <Ball key={food} food={food} i={i} />\r\n      ))}\r\n    </Center>\r\n  </Container>\r\n);\r\n\r\nconst rotateAnim = Array.from(Object.keys(food_image_small)).map(\r\n  (_, i, arr) => {\r\n    const frames = Array.from({ length: 20 })\r\n      .map((_, j, arr2) => {\r\n        const a = i / arr.length;\r\n        const b = j / (arr2.length - 1);\r\n\r\n        const phy = (a + b) * Math.PI * 2;\r\n        const A = 50;\r\n\r\n        // const s = (1 + Math.sin(a + b + 123)) * 1\r\n        const k = (b + a + 0.75) % 1;\r\n        const s = 0.2 + Math.abs(k - 0.5) * 2.8;\r\n\r\n        const fl = (x: number) => Math.round(x * 100) / 100;\r\n\r\n        return [\r\n          Math.round(b * 100) + \"%\",\r\n          \"{\",\r\n          \"transform:\",\r\n          `translate3d(${fl(Math.cos(phy) * A)}px,${fl(\r\n            Math.sin(phy) * A\r\n          )}px,0)`,\r\n          `scale(${s},${s})`,\r\n          \"}\",\r\n        ].join(\" \");\r\n      })\r\n      .join(\"\\n\");\r\n\r\n    return keyframes`${frames}`;\r\n  }\r\n);\r\n\r\nconst Ball = styled(FoodIcon)<{ i: number }>`\r\n  animation: ${(props) => rotateAnim[props.i]} 1500ms infinite linear;\r\n  width: 50px;\r\n  height: 50px;\r\n  position: absolute;\r\n  transform-origin: center;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  display: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Center = styled.div`\r\n  width: 120px;\r\n  height: 100px;\r\n  display: flex;\r\n  display: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: solid 5px rgba(255, 255, 255, 0.5);\r\n  border-radius: 50%;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 140px;\r\n    height: 120px;\r\n    border: solid 5px rgba(255, 255, 255, 0.5);\r\n    border-radius: 50%;\r\n  }\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 98px;\r\n    height: 80px;\r\n    border: solid 3px rgba(255, 255, 255, 0.5);\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport turtlequeue from \"turtlequeue\";\r\nimport \"websocket\";\r\nimport { useState } from \"react\";\r\nimport useConstant from \"./useConstant\";\r\n\r\nexport const useSubscription = (\r\n  userToken: string,\r\n  apiKey: string,\r\n  channel: string,\r\n  location: Location\r\n) => {\r\n  // hold the events\r\n  const [events, setEvents] = useState<Event[]>([]);\r\n  const pushEvent = (e: Event) =>\r\n    setEvents(\r\n      [...events, e]\r\n\r\n        // re-sort by date\r\n        .sort((a, b) => a.date - b.date)\r\n\r\n        // remove duplicate (based on key)\r\n        .filter((x, i, arr) => i === arr.findIndex((u) => u.key === x.key))\r\n    );\r\n\r\n  // instanciate the queue object\r\n  const queue = useConstant(() =>\r\n    turtlequeue.create.make({\r\n      host: \"turtlequeue.com\",\r\n      type: \"ws\",\r\n      protocol: \"https\",\r\n    })\r\n  );\r\n\r\n  // handle status lifecycle\r\n  const [status, setStatus] = useState<Status>(\"disconnected\");\r\n  useEffect(() => {\r\n    const onReady = () => setStatus(\"ready\");\r\n    const onConnect = () =>\r\n      setStatus((s) => (s === \"ready\" ? \"ready\" : \"connected\"));\r\n    const onDisconnect = () => setStatus(\"disconnected\");\r\n\r\n    queue.on(\"ready\", onReady);\r\n    queue.on(\"connect\", onConnect);\r\n    queue.on(\"disconnect\", onDisconnect);\r\n\r\n    return () => {\r\n      queue.unbind(\"ready\", onReady);\r\n      queue.unbind(\"connect\", onConnect);\r\n      queue.unbind(\"disconnect\", onDisconnect);\r\n    };\r\n  }, [queue]);\r\n\r\n  // connect once\r\n  useEffect(() => {\r\n    queue.connect({ userToken, apiKey });\r\n\r\n    return () => {\r\n      queue.disconnect();\r\n    };\r\n  }, [userToken, apiKey]);\r\n\r\n  // subscribe\r\n  useEffect(() => {\r\n    if (status !== \"ready\") return;\r\n\r\n    const onMessage = (error: Error | null, data: any, _meta: any) => {\r\n      if (isEvent(data)) pushEvent(data);\r\n    };\r\n\r\n    const options = { channel };\r\n\r\n    queue.subscribe(options, onMessage);\r\n\r\n    return () => {\r\n      queue.unsubscribe(options, onMessage);\r\n    };\r\n  }, [status, channel, location]);\r\n\r\n  //\r\n  const publish = (food: Food) => {\r\n    if (status !== \"ready\") return;\r\n\r\n    const event = {\r\n      food,\r\n      key: generateRandomKey(),\r\n      date: Date.now(),\r\n      location,\r\n    };\r\n\r\n    // in order to provide an instant feedback,\r\n    // push the event into the list right away,\r\n    // without waiting for the request to come back\r\n    // (it will be filtered based on the key to not appear twice)\r\n    pushEvent(event);\r\n\r\n    // publish\r\n    return new Promise((resolve, reject) => {\r\n      queue.publish(\r\n        { payload: event, channel },\r\n        (err: Error | null, _data: any, _metadata: any) => {\r\n          if (err) reject(err);\r\n          else resolve();\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return { publish, status, events };\r\n};\r\n\r\nconst generateRandomKey = () => Math.random().toString(16).slice(2);\r\n\r\ntype Food = \"taco\" | \"fries\" | \"pizza\" | \"burrito\";\r\n\r\ntype Status =\r\n  //\r\n  | \"disconnected\"\r\n\r\n  // the server answered and the handshake happened\r\n  | \"connected\"\r\n\r\n  // the server authorised the credentials\r\n  | \"ready\";\r\n\r\ntype Location = { lat: number; lon: number };\r\n\r\ntype Event = {\r\n  key: string;\r\n  date: number;\r\n  food: Food;\r\n  location: Location;\r\n};\r\n\r\n// return true if the object shape looks like an event (roughly)\r\nconst isEvent = (x: any): x is Event =>\r\n  typeof x.key === \"string\" && typeof x.food === \"string\" && x.location;\r\n","import { useRef } from \"react\";\r\n\r\nexport default function useConstant<T>(fn: () => T): T {\r\n  const ref = useRef<{ v: T }>();\r\n\r\n  if (!ref.current) {\r\n    ref.current = { v: fn() };\r\n  }\r\n\r\n  return ref.current.v;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst getUserCoord = (): Promise<Coordinates> =>\r\n  new Promise((resolve, reject) =>\r\n    navigator.geolocation.getCurrentPosition(\r\n      (x) => resolve(x.coords),\r\n      (err) => reject(err),\r\n      {\r\n        timeout: 10000,\r\n      }\r\n    )\r\n  );\r\n\r\nconst defaultLocation = {\r\n  lat: 60.2353439 + Math.random() * 0.01,\r\n  lon: 7.604292 + Math.random() * 0.01,\r\n};\r\n\r\nexport const useLocation = () => {\r\n  const [location, setLocation] = useState(defaultLocation);\r\n\r\n  const located = location !== defaultLocation;\r\n\r\n  useEffect(() => {\r\n    getUserCoord().then((x) =>\r\n      setLocation({ lat: x.latitude, lon: x.longitude })\r\n    );\r\n  }, []);\r\n\r\n  return { location, located };\r\n};\r\n","const config = {\r\n  turtlequeue: {\r\n    userToken: process.env.REACT_APP_TURTLEQUEUE_USER_TOKEN as string,\r\n    apiKey: process.env.REACT_APP_TURTLEQUEUE_API_KEY as string,\r\n  },\r\n  gmaps: {\r\n    apiKey: process.env.REACT_APP_GMAP_API_KEY as string,\r\n  },\r\n};\r\n\r\nconsole.log(\"CONFIG IS\", JSON.stringify(config, null, 2));\r\n\r\nexport default config;\r\n","import React from \"react\";\r\n\r\nimport { MapPage } from \"./component/_page/MapPage\";\r\nimport { WaitingPage } from \"./component/_page/WaitingPage\";\r\nimport { useSubscription } from \"./component/_hook/useSubscription\";\r\nimport { useLocation } from \"./component/_hook/useLocation\";\r\nimport { useGoogleApi } from \"./component/_hook/useGoogleApi\";\r\nimport config from \"./config\";\r\n\r\nconst TURTLEQUEUE_CHANNEL = \"#food\";\r\n\r\nconst App = () => {\r\n  const googleMapReady = useGoogleApi(config?.gmaps.apiKey);\r\n  const { location } = useLocation();\r\n  const { events, status, publish } = useSubscription(\r\n    config.turtlequeue.userToken,\r\n    config.turtlequeue.apiKey,\r\n    TURTLEQUEUE_CHANNEL,\r\n    location\r\n  );\r\n\r\n  if (!googleMapReady || status !== \"ready\") return <WaitingPage />;\r\n\r\n  return (\r\n    <MapPage\r\n      googleApiKey={config.gmaps.apiKey}\r\n      events={events}\r\n      publish={publish}\r\n      location={location}\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}